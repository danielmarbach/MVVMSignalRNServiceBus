//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="System", Namespace="http://schemas.datacontract.org/2004/07/WcfServices")]
    [System.SerializableAttribute()]
    public partial class System : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISystemService")]
    public interface ISystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/GetSystems", ReplyAction="http://tempuri.org/ISystemService/GetSystemsResponse")]
        WpfApplication.ServiceReference1.System[] GetSystems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/GetSystems", ReplyAction="http://tempuri.org/ISystemService/GetSystemsResponse")]
        System.Threading.Tasks.Task<WpfApplication.ServiceReference1.System[]> GetSystemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/GetSystem", ReplyAction="http://tempuri.org/ISystemService/GetSystemResponse")]
        WpfApplication.ServiceReference1.System GetSystem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/GetSystem", ReplyAction="http://tempuri.org/ISystemService/GetSystemResponse")]
        System.Threading.Tasks.Task<WpfApplication.ServiceReference1.System> GetSystemAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/SaveSystem", ReplyAction="http://tempuri.org/ISystemService/SaveSystemResponse")]
        void SaveSystem(WpfApplication.ServiceReference1.System system);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISystemService/SaveSystem", ReplyAction="http://tempuri.org/ISystemService/SaveSystemResponse")]
        System.Threading.Tasks.Task SaveSystemAsync(WpfApplication.ServiceReference1.System system);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISystemServiceChannel : WpfApplication.ServiceReference1.ISystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemServiceClient : System.ServiceModel.ClientBase<WpfApplication.ServiceReference1.ISystemService>, WpfApplication.ServiceReference1.ISystemService {
        
        public SystemServiceClient() {
        }
        
        public SystemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfApplication.ServiceReference1.System[] GetSystems() {
            return base.Channel.GetSystems();
        }
        
        public System.Threading.Tasks.Task<WpfApplication.ServiceReference1.System[]> GetSystemsAsync() {
            return base.Channel.GetSystemsAsync();
        }
        
        public WpfApplication.ServiceReference1.System GetSystem(System.Guid id) {
            return base.Channel.GetSystem(id);
        }
        
        public System.Threading.Tasks.Task<WpfApplication.ServiceReference1.System> GetSystemAsync(System.Guid id) {
            return base.Channel.GetSystemAsync(id);
        }
        
        public void SaveSystem(WpfApplication.ServiceReference1.System system) {
            base.Channel.SaveSystem(system);
        }
        
        public System.Threading.Tasks.Task SaveSystemAsync(WpfApplication.ServiceReference1.System system) {
            return base.Channel.SaveSystemAsync(system);
        }
    }
}
